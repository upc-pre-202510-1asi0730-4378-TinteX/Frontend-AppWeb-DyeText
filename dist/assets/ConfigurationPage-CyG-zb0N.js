import{_ as h,c as r,a as s,k as d,f as m,t as c,j as g,v as y,i as _,o as a,b as C,d as T}from"./index-PoYZxlwP.js";import{h as p}from"./http.instance-t2F9Yq3_.js";import"./index-xsH4HHeE.js";const b={props:{config:{type:Object,required:!0}},data(){return{errorMessage:""}},methods:{onTestConnection(){if(this.config.updateFrequency<=0){this.errorMessage=this.$t("machine-configuration.connectionFailure")+": "+this.$t("machine-configuration.updateFrequency");return}this.errorMessage="",this.$emit("test-connection",this.config)}}},v={class:"form-group"},q={for:"protocol"},F={class:"form-group"},$={for:"updateFrequency"},k={key:0,class:"error-message"},M={type:"submit",class:"test-button"};function R(e,o,u,i,n,t){return a(),r("form",{onSubmit:o[2]||(o[2]=_((...l)=>t.onTestConnection&&t.onTestConnection(...l),["prevent"])),class:"connection-form"},[s("div",v,[s("label",q,c(e.$t("machine-configuration.protocol")),1),m(s("select",{"onUpdate:modelValue":o[0]||(o[0]=l=>u.config.protocol=l),id:"protocol"},o[3]||(o[3]=[s("option",{value:"MQTT"},"MQTT",-1),s("option",{value:"Modbus"},"Modbus",-1),s("option",{value:"HTTP"},"HTTP",-1)]),512),[[g,u.config.protocol]])]),s("div",F,[s("label",$,c(e.$t("machine-configuration.updateFrequency")),1),m(s("input",{"onUpdate:modelValue":o[1]||(o[1]=l=>u.config.updateFrequency=l),id:"updateFrequency",type:"number",required:"",min:"1"},null,512),[[y,u.config.updateFrequency]])]),n.errorMessage?(a(),r("p",k,c(n.errorMessage),1)):d("",!0),s("button",M,c(e.$t("machine-configuration.testConnection")),1)],32)}const w=h(b,[["render",R],["__scopeId","data-v-02c4f1f6"]]),E=async e=>p.post("https://backend-dyetex.onrender.com/api/v1undefined",e).then(i=>({success:!0,details:i.data.message||`Connected via ${e.protocol}`})).catch(i=>{var n,t;throw new Error(((t=(n=i.response)==null?void 0:n.data)==null?void 0:t.message)||"Connection failed. Please check your configuration.")}),I=async e=>p.get(`https://backend-dyetex.onrender.com/api/v1/textile-machines/${e}`).then(i=>{const n=i.data;return{name:n.name||"",updateFrequency:n.updateFrequency||0}}).catch(i=>{var n,t;throw new Error(((t=(n=i.response)==null?void 0:n.data)==null?void 0:t.message)||"Error al obtener la información de la máquina.")}),U={components:{ConnectionForm:w},props:{machine:{type:Object,required:!0}},data(){return{connectionResult:null,machineConfig:{name:"",protocol:"HTTP",updateFrequency:0}}},async created(){if(!this.machine.id){console.error("El ID de la máquina no está definido.");return}try{const e=await I(this.machine.id);this.machineConfig.name=e.name,this.machineConfig.updateFrequency=e.updateFrequency}catch(e){console.error("Error al cargar la información de la máquina:",e.message)}},methods:{async handleTestConnection(e){try{const o=await E(e);this.connectionResult={success:!0,details:o.details}}catch(o){this.connectionResult={success:!1,error:o.message}}},goToTestConnection(){this.$router.push({name:"test-connection"})}}},P={class:"configuration-container"},V={class:"configuration-title"},S={class:"form-container"},j={key:0,class:"connection-result"},B={key:0,class:"success-message"},D={key:1,class:"error-message"},H={key:2,class:"details-message"};function N(e,o,u,i,n,t){const l=T("ConnectionForm");return a(),r("div",P,[s("h1",V,c(e.$t("machine-configuration.title"))+": "+c(n.machineConfig.name),1),s("div",S,[C(l,{config:n.machineConfig,onTestConnection:t.handleTestConnection},null,8,["config","onTestConnection"])]),n.connectionResult?(a(),r("div",j,[n.connectionResult.success?(a(),r("p",B,c(e.$t("machine-configuration.connectionSuccess")),1)):(a(),r("p",D,c(e.$t("machine-configuration.connectionFailure"))+": "+c(n.connectionResult.error),1)),n.connectionResult.details?(a(),r("p",H,c(n.connectionResult.details),1)):d("",!0),n.connectionResult.success?(a(),r("button",{key:3,class:"continue-button",onClick:o[0]||(o[0]=(...f)=>t.goToTestConnection&&t.goToTestConnection(...f))},c(e.$t("machine-configuration.continue")),1)):d("",!0)])):d("",!0)])}const z=h(U,[["render",N],["__scopeId","data-v-b30941f1"]]);export{z as default};
